<project name="build-main" xmlns:ivy="antlib:org.apache.ivy.ant">

	<property file="build-conf.properties" />
	
	<!-- set default values for optional properties in the build-conf.properties -->  
	<property name="publication.local.overwrite" value="false"/>
	
	
	<dirname property="build-main.dir" file="${ant.file.build-main}"/>

	<property name="src.main.java.dir" value="src/main/java" />
	<property name="src.main.res.dir" value="src/main/resources" />
	<property name="src.test.java.dir" value="src/test/java" />
	<property name="src.test.res.dir" value="src/test/resources" />

	<property name="dist.dir" value="dist" />

	<property name="dist.main.classes.dir" value="${dist.dir}/main-classes" />
	<property name="dist.test.classes.dir" value="${dist.dir}/test-classes" />
	<property name="dist.test.reports.dir" value="${dist.dir}/test-reports" />
	<property name="dist.package.dir" value="${dist.dir}/package" />

	<property name="dist.package.jar" value="${dist.package.dir}/${artifact.module}.jar" />
	<property name="dist.package.source.jar" value="${dist.package.dir}/${artifact.module}-source.jar" />
	<property name="dist.package.javadoc.jar" value="${dist.package.dir}/${artifact.module}-javadoc.jar" />

	<property name="dist.main.lib.dir" value="${dist.dir}/lib-main" />
	<property name="dist.test.lib.dir" value="${dist.dir}/lib-test" />

	<property name="lib.artifact.pattern" value="[artifact]-[revision].[ext]" />
	<property name="package.artifact.pattern" value="[artifact](-[classifier]).[ext]" />


	<target name="clean" description="remove generated data">
		<delete dir="${dist.dir}" />
	</target>


	<target name="assertConfigurationRequirement">
		<fail message="The file 'build-conf.properties' is mssing.\nCreate it in module directory from template file '../build-conf.properties.template'">
			<condition>
				<not>
					<resourceexists>
						<file file="build-conf.properties"/>
					</resourceexists>
				</not>
			</condition>
		</fail>
		
		<fail message="Property 'artifact.version' not defined" unless="artifact.version"/>
		
		<fail message="Property 'artifact.status' is invalid. Did you removed the unecessary white spaces">
			<condition>
				<not>
					<or>
						<equals arg1="${artifact.status}" arg2="integration"/>
						<equals arg1="${artifact.status}" arg2="milestone"/>
						<equals arg1="${artifact.status}" arg2="release"/>
					</or>
				</not>
			</condition>
		</fail>
	</target>

	<target name="init" depends="assertConfigurationRequirement">
		<ivy:configure settingsId="default.ivysettings" file="${build-main.dir}/ivysettings.xml"/>
	</target>

	<target name="compile" depends="init" description="--> Compile the main source code">
		<mkdir dir="${dist.main.classes.dir}" />
		<mkdir dir="${dist.main.lib.dir}" />
		<ivy:retrieve conf="compile" pattern="${dist.main.lib.dir}/${lib.artifact.pattern}" type="jar" settingsRef="default.ivysettings" />
		<javac destdir="${dist.main.classes.dir}" includeantruntime="false">
			<classpath>
				<fileset dir="${dist.main.lib.dir}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<src path="${src.main.java.dir}" />
		</javac>
		<copy todir="${dist.main.classes.dir}">
			<fileset dir="${src.main.res.dir}" />
		</copy>
	</target>


	
	<target name="test-compile" depends="compile">
		<mkdir dir="${dist.test.classes.dir}" />
		<mkdir dir="${dist.test.lib.dir}" />
		<ivy:retrieve conf="test" pattern="${dist.test.lib.dir}/${lib.artifact.pattern}" type="jar" settingsRef="default.ivysettings"/>
		<javac destdir="${dist.test.classes.dir}" includeantruntime="false">
			<classpath>
				<fileset dir="${dist.test.lib.dir}" includes="**/*.jar" />
				<pathelement location="${dist.main.classes.dir}" />
				<fileset dir="${dist.main.lib.dir}" includes="**/*.jar" />
			</classpath>
			<src path="${src.test.java.dir}" />
		</javac>
		<copy todir="${dist.test.classes.dir}">
			<fileset dir="${src.test.res.dir}" />
		</copy>
	</target>



	<target name="test" depends="test-compile" description="--> Run the unit tests">
		<mkdir dir="${dist.test.reports.dir}" />
		<junit printsummary="yes" haltonfailure="yes">
			<classpath>
				<pathelement location="${dist.test.classes.dir}" />
				<fileset dir="${dist.test.lib.dir}" includes="**/*.jar" />
				<pathelement location="${dist.main.classes.dir}" />
				<fileset dir="${dist.main.lib.dir}" includes="**/*.jar" />
			</classpath>

			<formatter type="plain" />

			<batchtest fork="yes" todir="${dist.test.reports.dir}">
				<fileset dir="${src.test.java.dir}">
					<exclude name="**/*IntegTest.java" />
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>



	<target name="test-integ" depends="test-compile" description="--> Run the integration tests">
		<junit printsummary="yes" haltonfailure="yes">
			<classpath>
				<pathelement location="${dist.test.classes.dir}" />
				<fileset dir="${dist.test.lib.dir}" includes="**/*.jar" />
				<pathelement location="${dist.main.classes.dir}" />
				<fileset dir="${dist.main.lib.dir}" includes="**/*.jar" />
			</classpath>

			<formatter type="plain" />

			<batchtest fork="yes" todir="${dist.test.reports.dir}">
				<fileset dir="${src.test.java.dir}">
					<include name="**/*IntegTest.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>



	<target name="package" depends="compile,test-compile" description="--> Create the final artifact(s)">
		<jar destfile="${dist.package.jar}">
			<fileset dir="${dist.main.classes.dir}" />
		</jar>
		
		<jar destfile="${dist.package.source.jar}">
			<fileset dir="${src.main.java.dir}" />
			<fileset dir="${src.main.res.dir}" />
		</jar>
	</target>



	<target name="publish-local" depends="package" description="--> Publish the artifact(s)  to the local repository">
		<tstamp>
			<format property="now" pattern="yyyy-MM-dd HH-mm-ss"/>
		</tstamp>
		<ivy:resolve conf="runtime" settingsRef="default.ivysettings"/>
		<echo>Pattern = ${package.artifact.pattern}</echo>
		<ivy:publish 	resolver="local" 
						settingsref="default.ivysettings" 
						pubrevision="${artifact.version}" 
						pubdate="${now}"
			            status="${artifact.status}"
			            forcedeliver="true"
						overwrite="${publication.local.overwrite}">
			<artifacts pattern="${dist.package.dir}/${package.artifact.pattern}" />
		</ivy:publish>
	</target>

</project>